#
# vdb / master
#

- name: "vdb"
  become: true
  gather_facts: false
  hosts: localhost

  tasks:
    # CORE
    - include: core.yaml

    # REPO
    - name: "pkg: update & upgrade"
      apt:
        upgrade: dist
        update_cache: yes

    # PKG
    - name: "install vdb: master"
      apt:
        pkg:
          - parted
          - curl
          - jq
          - mariadb-server
        state: present

    # DB
    - name: "cfg: server.cnf"
      template:
        src: tmpl/mariadb.cnf
        dest: /etc/mysql/mariadb.conf.d/50-server.cnf

    - name: "cfg: init"
      shell: |
        # init
        if [[ -n $(lsblk | grep {{ vdb_data_dev.data.Value }}) ]]; then
          sudo parted /dev/{{ vdb_data_dev.data.Value }} mklabel gpt
          sudo blkid /dev/{{ vdb_data_dev.data.Value }}
          sudo mkfs.ext4 -F /dev/{{ vdb_data_dev.data.Value }}
          sudo mkdir -p {{ vdb_data_dir.data.Value }}
          echo "/dev/{{ vdb_data_dev.data.Value }} {{ vdb_data_dir.data.Value }} ext4 defaults 0 2" | sudo tee -a /etc/fstab
          sudo mount -a
        fi

        # configure
        sudo systemctl stop mysql

        sudo mkdir -p {{ vdb_dir.data.Value }}
        sudo mkdir -p {{ vdb_log.data.Value }}
        sudo chown mysql:mysql {{ vdb_dir.data.Value }}
        sudo chown mysql:mysql {{ vdb_log.data.Value }}

        sudo mysql_install_db
        sudo systemctl start mysql

    - name: "cfg: user"
      shell: |
        # root
        mysql -uroot -e "UPDATE mysql.user SET Password = PASSWORD('{{ vdb_root_password.data.Value }}') WHERE User = 'root'"
        mysql -uroot -e "DROP USER ''@'localhost'"
        mysql -uroot -e "DROP USER ''@'$(hostname)'"
        mysql -uroot -e "DROP DATABASE test"
        mysql -uroot -e "FLUSH PRIVILEGES;"

        # mgmt
        mysql -uroot -p{{ vdb_root_password.data.Value }} -e "GRANT ALL PRIVILEGES ON *.* TO {{ vdb_mgmt_user.data.Value }}@'%' IDENTIFIED BY '{{ vdb_mgmt_password.data.Value }}';"
        mysql -uroot -p{{ vdb_root_password.data.Value }} -e "FLUSH PRIVILEGES;"

        # replica
        mysql -uroot -p{{ vdb_root_password.data.Value }} -e "CREATE USER '{{ vdb_replica_user.data.Value }}'@'%' IDENTIFIED  BY '{{ vdb_replica_password.data.Value }}';"
        mysql -uroot -p{{ vdb_root_password.data.Value }} -e "GRANT REPLICATION SLAVE ON *.* TO '{{ vdb_replica_user.data.Value }}'@'%';"

    - name: "get: replica/master/position"
      shell: |
        mysql -uroot -p{{ vdb_root_password.data.Value }} -e 'show master status\G' | grep 'Position' | awk '{print $2}'
      register: vdb_master_position

    - name: "get: replica/master/file"
      shell: |
        mysql -uroot -p{{ vdb_root_password.data.Value }} -e 'show master status\G' | grep 'File' | awk '{print $2}'
      register: vdb_master_file

    - name: "get k/v: vdb_master_position"
      consul_kv:
        key: "{{ meta.json.meta.project }}/{{ meta.json.meta.env }}/{{ meta.json.meta.service }}/vdb_master_position"
        value: "{{ vdb_master_position.stdout_lines[0] }}"
        host: "{{ meta.json.meta.consul_host }}"
        port: "{{ meta.json.meta.consul_port }}"
        scheme: "{{ meta.json.meta.consul_schema }}"

    - name: "get k/v: vdb_master_file"
      consul_kv:
        key: "{{ meta.json.meta.project }}/{{ meta.json.meta.env }}/{{ meta.json.meta.service }}/vdb_master_file"
        value: "{{ vdb_master_file.stdout_lines[0] }}"
        host: "{{ meta.json.meta.consul_host }}"
        port: "{{ meta.json.meta.consul_port }}"
        scheme: "{{ meta.json.meta.consul_schema }}"

    - name: "systemd (restart): db"
      systemd:
        name: mysql
        state: restarted

    - name: "systemd (enabled): db"
      systemd:
        name: mysql
        enabled: yes

    - name: "meta"
      when: "{{ vdb_meta.data.Value | from_json }}"
      shell: |
        # meta-db-client
        wget -O /tmp/meta-db-client {{ vdb_meta_client_url.data.Value }}
        chmod 755 /tmp/meta-db-client
        /tmp/meta-db-client --meta-url "{{ vdb_meta_data_url.data.Value }}" --db-username root --db-password {{ vdb_root_password.data.Value }} --meta-sql --meta-user > /tmp/meta.sh
        chmod 755 /tmp/meta.sh
        /tmp/meta.sh

    - name: "sysbench"
      when: "{{ vdb_sysbench.data.Value | from_json }}"
      shell: |
        # db/sysbench
        mysql -uroot -p{{ vdb_root_password.data.Value }} -e "CREATE DATABASE {{ vdb_sysbench_db.data.Value }};"
        mysql -uroot -p{{ vdb_root_password.data.Value }} -e "CREATE USER '{{ vdb_sysbench_user.data.Value }}'@'%' IDENTIFIED BY '{{ vdb_sysbench_password.data.Value }}';"
        mysql -uroot -p{{ vdb_root_password.data.Value }} -e "GRANT ALL ON {{ vdb_sysbench_db.data.Value }}.* TO '{{ vdb_sysbench_user.data.Value }}'@'%';"
        mysql -uroot -p{{ vdb_root_password.data.Value }} -e "FLUSH PRIVILEGES;"

        # qa
        touch /tmp/my.txt
        touch /tmp/cpu.txt
        touch /tmp/mem.txt

        echo "innodb_flush_log_at_trx_commit = {{ vdb_innodb_flush_log_at_trx_commit.data.Value }}" | cat >> /tmp/my.txt
        echo "innodb_file_per_table = {{ vdb_innodb_file_per_table.data.Value }}" | cat >> /tmp/my.txt
        echo "innodb_log_file_size = {{ vdb_innodb_log_file_size.data.Value }}" | cat >> /tmp/my.txt
        echo "innodb_buffer_pool_size = {{ vdb_innodb_buffer_pool_size.data.Value }}" | cat >> /tmp/my.txt

        curl -T /tmp/my.txt {{ qa_url.data.Value }}/{{ qu_uuid.data.Value }}-$(date +%m-%d-%Y)/$(hostname)-my.txt

        # cpu
        sudo lscpu > /tmp/cpu.txt
        curl -T /tmp/cpu.txt {{ qa_url.data.Value }}/{{ qu_uuid.data.Value }}-$(date +%m-%d-%Y)/$(hostname)-cpu.txt

        # mem
        sudo vmstat -sa > /tmp/mem.txt
        curl -T /tmp/mem.txt {{ qa_url.data.Value }}/{{ qu_uuid.data.Value }}-$(date +%m-%d-%Y)/$(hostname)-mem.txt
